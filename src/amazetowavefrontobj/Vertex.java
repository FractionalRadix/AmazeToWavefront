package amazetowavefrontobj;

/**
 * Keep track of a single Vertex.
 * @author FractionalRadix
 */
class Vertex
{
    private double x, y, z, w;
    
    public Vertex(double x, double y, double z, double w) {
        this.x = x;
        this.y = y;
        this.z = z;
        this.w = w;
    }
    
    public Vertex(double x, double y, double z) {
        this(x, y, z, 1.0);
    }
    
    public String exportToWavefront() {
       return "v " + x + " " + y + " " + z + " " + w;
       // Could use String.join but it's harder to read:
       // return String.join(" ", "v ", ""+x,  ""+y,  ""+z,  ""+w);
    }
    
    @Override
    public boolean equals(Object other)
    {
        if (other instanceof Vertex)
        {
            Vertex that = (Vertex) other;
            boolean xEqual = (this.x == that.x);
            boolean yEqual = (this.y == that.y);
            boolean zEqual = (this.z == that.z);
            boolean wEqual = (this.w == that.w);
            return xEqual && yEqual && zEqual && wEqual;
        }
        else
        {
            return false;
        }
    }

    // Generated by NetBeans.
    @Override
    public int hashCode() {
        int hash = 5;
        hash = 59 * hash + (int) (Double.doubleToLongBits(this.x) ^ (Double.doubleToLongBits(this.x) >>> 32));
        hash = 59 * hash + (int) (Double.doubleToLongBits(this.y) ^ (Double.doubleToLongBits(this.y) >>> 32));
        hash = 59 * hash + (int) (Double.doubleToLongBits(this.z) ^ (Double.doubleToLongBits(this.z) >>> 32));
        hash = 59 * hash + (int) (Double.doubleToLongBits(this.w) ^ (Double.doubleToLongBits(this.w) >>> 32));
        return hash;
    }
}

